# Generated by Django 5.0.4 on 2024-06-26 12:34

import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("irisApp", "0006_alter_iris_depressed"),
        ("users", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="HistoricalIris",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("das1", models.IntegerField(blank=True, null=True)),
                ("das2", models.IntegerField(blank=True, null=True)),
                ("das3", models.IntegerField(blank=True, null=True)),
                ("das4", models.IntegerField(blank=True, null=True)),
                ("das5", models.IntegerField(blank=True, null=True)),
                ("das6", models.IntegerField(blank=True, null=True)),
                ("das7", models.IntegerField(blank=True, null=True)),
                ("das8", models.IntegerField(blank=True, null=True)),
                ("das_d", models.BooleanField(blank=True, default=False, null=True)),
                ("das_a", models.BooleanField(blank=True, default=False, null=True)),
                ("das_s", models.BooleanField(blank=True, default=False, null=True)),
                ("Age", models.IntegerField(blank=True, null=True)),
                ("Gender", models.CharField(blank=True, max_length=35, null=True)),
                (
                    "Family_History",
                    models.CharField(blank=True, max_length=35, null=True),
                ),
                (
                    "Personal_History",
                    models.CharField(blank=True, max_length=35, null=True),
                ),
                (
                    "Current_Stressors",
                    models.CharField(blank=True, max_length=35, null=True),
                ),
                ("Symptoms", models.CharField(blank=True, max_length=35, null=True)),
                ("Severity", models.CharField(blank=True, max_length=35, null=True)),
                (
                    "Impact_on_Life",
                    models.CharField(blank=True, max_length=35, null=True),
                ),
                (
                    "Demographics",
                    models.CharField(blank=True, max_length=35, null=True),
                ),
                (
                    "Medical_History",
                    models.CharField(blank=True, max_length=35, null=True),
                ),
                (
                    "Psychiatric_History",
                    models.CharField(blank=True, max_length=35, null=True),
                ),
                (
                    "Substance_Use",
                    models.CharField(blank=True, max_length=35, null=True),
                ),
                (
                    "Coping_Mechanisms",
                    models.CharField(blank=True, max_length=35, null=True),
                ),
                (
                    "Social_Support",
                    models.CharField(blank=True, max_length=35, null=True),
                ),
                (
                    "Lifestyle_Factors",
                    models.CharField(blank=True, max_length=35, null=True),
                ),
                ("Positive_Negative_panic", models.BooleanField(blank=True, null=True)),
                ("Sadness", models.CharField(blank=True, max_length=35, null=True)),
                ("Euphoric", models.CharField(blank=True, max_length=35, null=True)),
                ("Exhausted", models.CharField(blank=True, max_length=35, null=True)),
                (
                    "Sleep_Dissorder",
                    models.CharField(blank=True, max_length=35, null=True),
                ),
                ("Mood_Swing", models.CharField(blank=True, max_length=35, null=True)),
                (
                    "Suicidal_Thoughts",
                    models.CharField(blank=True, max_length=35, null=True),
                ),
                ("Anorxia", models.CharField(blank=True, max_length=35, null=True)),
                (
                    "Authority_Respect",
                    models.CharField(blank=True, max_length=35, null=True),
                ),
                (
                    "Try_Explanation",
                    models.CharField(blank=True, max_length=35, null=True),
                ),
                (
                    "Aggressive_Response",
                    models.CharField(blank=True, max_length=35, null=True),
                ),
                (
                    "Ignore_And_Move_On",
                    models.CharField(blank=True, max_length=35, null=True),
                ),
                (
                    "Nervous_BreakDown",
                    models.CharField(blank=True, max_length=35, null=True),
                ),
                (
                    "Admit_Mistakes",
                    models.CharField(blank=True, max_length=35, null=True),
                ),
                (
                    "Overthinking",
                    models.CharField(blank=True, max_length=35, null=True),
                ),
                (
                    "Sexual_Activity",
                    models.CharField(blank=True, max_length=35, null=True),
                ),
                (
                    "Concentration",
                    models.CharField(blank=True, max_length=35, null=True),
                ),
                ("Optimisim", models.CharField(blank=True, max_length=35, null=True)),
                (
                    "Expert_Diagnose",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Bipolar Type-1", "Bipolar Type-1"),
                            ("Bipolar Type-2", "Bipolar Type-2"),
                            ("Depression", "Depression"),
                            ("Normal", "Normal"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                ("Married", models.CharField(blank=True, max_length=35, null=True)),
                (
                    "Number_Children",
                    models.CharField(blank=True, max_length=35, null=True),
                ),
                (
                    "total_members",
                    models.CharField(blank=True, max_length=35, null=True),
                ),
                (
                    "incoming_salary",
                    models.CharField(blank=True, max_length=35, null=True),
                ),
                (
                    "incoming_business",
                    models.CharField(blank=True, max_length=35, null=True),
                ),
                (
                    "incoming_no_business",
                    models.CharField(blank=True, max_length=35, null=True),
                ),
                (
                    "labor_primary",
                    models.CharField(blank=True, max_length=35, null=True),
                ),
                (
                    "Education_Level",
                    models.CharField(blank=True, max_length=35, null=True),
                ),
                (
                    "gained_asset_Category",
                    models.CharField(blank=True, max_length=35, null=True),
                ),
                (
                    "Durable_Asset_Category",
                    models.CharField(blank=True, max_length=35, null=True),
                ),
                (
                    "Save_Asset_Category",
                    models.CharField(blank=True, max_length=35, null=True),
                ),
                (
                    "Living_Expenses_Category",
                    models.CharField(blank=True, max_length=35, null=True),
                ),
                (
                    "Other_Expenses_Category",
                    models.CharField(blank=True, max_length=35, null=True),
                ),
                (
                    "Lasting_Investment_Category",
                    models.CharField(blank=True, max_length=35, null=True),
                ),
                (
                    "No_Lasting_Investment_Category",
                    models.CharField(blank=True, max_length=35, null=True),
                ),
                ("depressed", models.BooleanField(blank=True, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "Doctor_email",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="users.doctor",
                    ),
                ),
                (
                    "Person_email",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="users.patient",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical IRIS",
                "verbose_name_plural": "historical IRISs",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
